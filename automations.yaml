- id: '1584621966513'
  alias: 3_Clima CO2 high
  description: Turn on when above given treshold, but not withing quiet hours.
  trigger:
  - above: '1000'
    entity_id: sensor.mh_z19_co2
    platform: numeric_state
  condition:
  - condition: state
    entity_id: switch.ventilator
    state: 'off'
  - condition: or
    conditions:
    - after: '21:00:00'
      before: 06:00:00
      condition: time
    - after: 08:00:00
      before: '19:00'
      condition: time
  - condition: state
    entity_id: input_boolean.enable_automatic_ventilation
    state: 'on'
  action:
  - data: {}
    entity_id: switch.ventilator
    service: switch.turn_on
  mode: single
- id: '1584622202899'
  alias: 3_Clima CO2 low
  description: Turn off when under given treshold and at certain times
  trigger:
  - below: '800'
    entity_id: sensor.mh_z19_co2
    platform: numeric_state
  - at: 06:00:00
    platform: time
  - at: '19:00:00'
    platform: time
  condition:
  - condition: state
    entity_id: switch.ventilator
    state: 'on'
  - condition: state
    entity_id: input_boolean.enable_automatic_ventilation
    state: 'on'
  action:
  - data: {}
    entity_id: switch.ventilator
    service: switch.turn_off
  mode: single
- id: '1585251952484'
  alias: 1_Lights 6_Toogle Box lamp
  description: Manual trigger for bedroom lamp
  trigger:
  - entity_id: switch.sonoff_ch2
    platform: state
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: switch.sonoff_ch2
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{  trigger.to_state.state == ''on''  }}'
      - condition: state
        entity_id: light.box_lamp
        state: 'off'
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 80
          kelvin: 2700
        entity_id: light.box_lamp
    - conditions:
      - condition: template
        value_template: '{{  trigger.to_state.state == ''off''  }}'
      - condition: state
        entity_id: light.box_lamp
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        entity_id: light.box_lamp
    default: []
  mode: single
- id: '1585325340725'
  alias: 1_Lights OFF All lights
  description: Turn off lights in the whole flat
  trigger:
  - entity_id: switch.sonoff_ch3
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - entity_id: group.group_all_lights
    service: homeassistant.turn_off
  - data: {}
    entity_id: switch.sonoff_ch3
    service: switch.turn_off
  mode: single
- id: '1585502004382'
  alias: 1_Lights 5_ON Daily lights
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.is_dark
    to: 'on'
  condition:
  - condition: time
    after: '12:00'
  action:
  - data: {}
    service: light.turn_on
    target:
      entity_id: light.ikea_lamp
  mode: single
- id: '1585676836818'
  alias: 1_Lights 5_OFF Daily lights
  description: ''
  trigger:
  - at: 00:00
    platform: time
  condition: []
  action:
  - data: {}
    service: light.turn_off
    target:
      entity_id: light.ikea_lamp
  mode: single
- id: '1585935683696'
  alias: 3_Clima CO2 high time based
  description: Additionaly after end of quiet hours it must be checked if not already
    above treshold
  trigger:
  - at: 08:00:00
    platform: time
  - at: '21:00:00'
    platform: time
  condition:
  - condition: state
    entity_id: switch.ventilator
    state: 'off'
  - above: '1000'
    condition: numeric_state
    entity_id: sensor.mh_z19_co2
  - condition: state
    entity_id: input_boolean.enable_automatic_ventilation
    state: 'on'
  action:
  - data: {}
    entity_id: switch.ventilator
    service: switch.turn_on
  mode: single
- id: '1587234076223'
  alias: 2_Vacuum Daily clean up
  description: Run regular clean up based on a defined schedule
  trigger:
  - minutes: /15
    platform: time_pattern
  condition:
  - after: 09:00:00
    before: '19:00:00'
    condition: time
  - condition: state
    entity_id: input_boolean.enable_daily_vacuum
    state: 'on'
  - condition: state
    entity_id: group.group_family
    state: not_home
  - above: '1'
    condition: numeric_state
    entity_id: sensor.days_since_last_cleanup
  action:
  - data: {}
    service: script.vacuum_start
  mode: single
- id: '1587300175500'
  alias: 2_Vacuum Zone clean up
  description: ''
  trigger:
  - entity_id: input_select.vacuum_room
    from: Select ...
    platform: state
  condition: []
  action:
  - data:
      entity_id: "{% if is_state(\"input_select.vacuum_room\", \"Kids room\") %}\n\
        \  script.kids_room_zone_cleanup\n{% elif is_state(\"input_select.vacuum_room\"\
        , \"Living room\") %} \n  script.living_room_zone_cleanup\n{% elif is_state(\"\
        input_select.vacuum_room\", \"Bedroom\") %} \n  script.bedroom_zone_cleanup\n\
        {% elif is_state(\"input_select.vacuum_room\", \"Kitchen\") %} \n  script.kitchen_zone_cleanup\n\
        {% elif is_state(\"input_select.vacuum_room\", \"Hall\") %} \n  script.hall_zone_cleanup\n\
        {% else %}  {% endif %}\n"
    service: script.turn_on
  - data:
      option: Select ...
    entity_id: input_select.vacuum_room
    service: input_select.select_option
  mode: single
- id: '1589699960298'
  alias: 1_Lights OFF if not home
  description: ''
  trigger:
  - entity_id: group.group_family
    from: home
    platform: state
    to: not_home
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.workplace_lamp
      state: 'on'
    - condition: state
      entity_id: light.hall_lamp
      state: 'on'
  action:
  - data: {}
    entity_id: light.workplace_lamp,light.hall_lamp
    service: light.turn_off
  mode: single
- id: '1596491335249'
  alias: 98_System Start up
  description: This happens after HASS start up
  trigger:
  - event: start
    platform: homeassistant
  condition: []
  action:
  - data:
      data:
        priority: -1
      target: galaxys10
      message: Home Assistant has started.
    service: notify.pusher
  mode: single
- id: '1596572554050'
  alias: 80_Emergency Fire detection
  description: Executed in case of fire!
  trigger:
  - type: smoke
    platform: device
    device_id: bed023ff1ef15460840ed28c1b5ffb76
    entity_id: binary_sensor.smoke_detector_smoke_alarm_smoke_detected
    domain: binary_sensor
  condition: []
  action:
  - data:
      data:
        expire: 3600
        priority: 2
        retry: 60
      message: Detekován kouř v bytě.
      title: Fire alarm!
    service: notify.pusher
  - data: {}
    entity_id: group.group_emergency_lights
    service: homeassistant.turn_on
  mode: single
- id: '1596642967004'
  alias: 1_Lights 3_ON WC lamp
  description: ''
  trigger:
  - device_id: 8e4df4c39f9f46d5ad753dd42bb0e103
    domain: binary_sensor
    entity_id: binary_sensor.motion_sensor
    platform: device
    type: motion
  condition:
  - condition: state
    entity_id: light.wc_lamp
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: time
        after: input_datetime.hours_night
        before: input_datetime.hours_day
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 10
        entity_id: light.wc_lamp
    default:
    - service: light.turn_on
      data:
        brightness_pct: 80
      entity_id: light.wc_lamp
  mode: single
- id: bathroom_light_on
  alias: 1_Lights 4_ON Bathroom lamp
  description: ''
  trigger:
  - platform: state
    entity_id: group.group_bathroom_motion_sensors
    from: 'off'
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.bathroom_lamp
      state: 'off'
    - condition: template
      value_template: '{{ state_attr(''light.bathroom_lamp'',''brightness'') == 51
        }}'
  action:
  - choose:
    - conditions:
      - condition: time
        after: input_datetime.hours_night
        before: input_datetime.hours_day
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 10
        entity_id: light.bathroom_lamp
    default:
    - service: light.turn_on
      data:
        brightness_pct: 100
      entity_id: light.bathroom_lamp
  mode: single
- id: '1596644035996'
  alias: 80_Emergency Water detection
  description: Notifies about water leaks.
  trigger:
  - entity_id: binary_sensor.water_bathroom
    from: 'off'
    platform: state
    to: 'on'
  - platform: state
    entity_id: binary_sensor.water_kitchen
    from: 'off'
    to: 'on'
  condition: []
  action:
  - data:
      data:
        expire: 3600
        priority: 2
        retry: 60
      message: Detekován únik vody. Zařízení {{ trigger.entity_id }}
      title: Water alarm!
    service: notify.pusher
  mode: single
- id: '1596657200251'
  alias: 1_Lights 3_OFF WC lamp
  description: ''
  trigger:
  - device_id: 8e4df4c39f9f46d5ad753dd42bb0e103
    domain: binary_sensor
    entity_id: binary_sensor.motion_sensor
    for:
      hours: 0
      minutes: 5
      seconds: 0
    platform: device
    type: no_motion
  condition: []
  action:
  - data: {}
    entity_id: light.wc_lamp
    service: light.turn_off
  mode: single
- id: bathroom_light_off
  alias: 1_Lights 4_OFF Bathroom lamp
  description: ''
  trigger:
  - platform: state
    entity_id: group.group_bathroom_motion_sensors
    from: 'on'
    to: 'off'
    for: 00:06:00
  condition: []
  action:
  - data: {}
    entity_id: light.bathroom_lamp
    service: light.turn_off
  mode: single
- id: '1596993559449'
  alias: 2_Vacuum Notify Vacuum state
  description: ''
  trigger:
  - entity_id: sensor.vacuum_error
    from: No Error
    platform: state
  condition: []
  action:
  - data:
      data:
        priority: 1
      message: '{{states.sensor.vacuum_error.state}}'
      title: Vacuum cleaner
    service: notify.pusher
  mode: single
- id: '1596994988659'
  alias: 1_Lights 2_ON Door lamp
  description: Automatic light in door area
  trigger:
  - type: motion
    platform: device
    device_id: e626c93c26c6490c9d2a9e71de6bbc80
    entity_id: binary_sensor.presence_5
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: light.door_lamp
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: time
        after: input_datetime.hours_night
        before: input_datetime.hours_day
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 10
        entity_id: light.door_lamp
    default:
    - service: light.turn_on
      data:
        brightness_pct: 100
      entity_id: light.door_lamp
  mode: single
- id: '1596995179898'
  alias: 1_Lights 2_OFF Door lamp
  description: Automatic light in door area
  trigger:
  - type: no_motion
    platform: device
    device_id: e626c93c26c6490c9d2a9e71de6bbc80
    entity_id: binary_sensor.presence_5
    domain: binary_sensor
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition: []
  action:
  - data: {}
    entity_id: light.door_lamp
    service: light.turn_off
  mode: single
- id: remote_control_1
  alias: 4_Remote circle controller
  description: Actions performed by circle remote at PC desk
  trigger:
  - event_data:
      event: 1002
      id: tradfri_remote_control
    event_type: deconz_event
    platform: event
  - event_data:
      event: 2002
      id: tradfri_remote_control
    event_type: deconz_event
    platform: event
  - event_data:
      event: 3002
      id: tradfri_remote_control
    event_type: deconz_event
    platform: event
  - event_data:
      event: 4002
      id: tradfri_remote_control
    event_type: deconz_event
    platform: event
  - event_data:
      event: 5002
      id: tradfri_remote_control
    event_type: deconz_event
    platform: event
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 1002 }}'
      sequence:
      - data: {}
        entity_id: light.workplace_lamp
        service: light.toggle
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 2002 and is_state("light.workplace_lamp",
          "on") }}'
      sequence:
      - data:
          transition: 1
          brightness_pct: "{% set brightness_pct = (state_attr('light.workplace_lamp',\
            \ 'brightness') / 2.55) | int | round(0) %} {% set new_brightness = brightness_pct\
            \ + 25 %} {% if new_brightness < 100 %}\n  {{ new_brightness }}\n{% else\
            \ %}\n  100\n{% endif %}\n"
        entity_id: light.workplace_lamp
        service: light.turn_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 2002 and is_state("light.workplace_lamp",
          "off") }}'
      sequence:
      - data:
          transition: 1
          brightness_pct: 100
        entity_id: light.workplace_lamp
        service: light.turn_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 3002 and is_state("light.workplace_lamp",
          "on") }}'
      sequence:
      - data:
          transition: 1
          brightness_pct: "{% set brightness_pct = (state_attr('light.workplace_lamp',\
            \ 'brightness') / 2.55) | int | round(0) %} {% set new_brightness = brightness_pct\
            \ - 25 %} {% if new_brightness > 1 %}\n  {{ new_brightness }}\n{% else\
            \ %}\n  1\n{% endif %}\n"
        entity_id: light.workplace_lamp
        service: light.turn_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 3002 and is_state("light.workplace_lamp",
          "off") }}'
      sequence:
      - data:
          transition: 1
          brightness_pct: 1
        entity_id: light.workplace_lamp
        service: light.turn_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 5002 }}'
      sequence:
      - data: {}
        entity_id: light.pc_lamp
        service: light.toggle
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 4002 }}'
      sequence:
      - data:
          transition: 1
          color_temp: "{% set color = state_attr('light.workplace_lamp', 'color_temp')\
            \ %}  {% if color > 400 %}\n  400 \n{% else %}\n  650\n{% endif %}\n"
        entity_id: light.workplace_lamp
        service: light.turn_on
  mode: single
- id: remote_control_dimmer
  alias: 4_Remote dimmer controller
  description: Actions performed by philips dimmer switch
  trigger:
  - event_data:
      event: 1000
      id: dimmer_switch
    event_type: deconz_event
    platform: event
  - event_data:
      event: 2000
      id: dimmer_switch
    event_type: deconz_event
    platform: event
  - event_data:
      event: 3000
      id: dimmer_switch
    event_type: deconz_event
    platform: event
  - event_data:
      event: 4000
      id: dimmer_switch
    event_type: deconz_event
    platform: event
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 1000 and is_state("light.hall_lamp",
          "off")}}'
      sequence:
      - data: {}
        entity_id: light.hall_lamp
        service: light.turn_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 4000 and is_state("light.hall_lamp",
          "on")}}'
      sequence:
      - data: {}
        entity_id: light.hall_lamp
        service: light.turn_off
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 2000 and is_state("light.hall_lamp",
          "on")}}'
      sequence:
      - data:
          transition: 1
          brightness_pct: "{% set brightness_pct = (state_attr('light.hall_lamp',\
            \ 'brightness') / 2.55) | int | round(0) %} {% set new_brightness = brightness_pct\
            \ + 25 %} {% if new_brightness < 100 %}\n  {{ new_brightness }}\n{% else\
            \ %}\n  100\n{% endif %}\n"
        entity_id: light.hall_lamp
        service: light.turn_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 2000 and is_state("light.hall_lamp",
          "off")}}'
      sequence:
      - data:
          transition: 1
          brightness_pct: 100
        entity_id: light.hall_lamp
        service: light.turn_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 3000 and is_state("light.hall_lamp",
          "on")}}'
      sequence:
      - data:
          transition: 1
          brightness_pct: "{% set brightness_pct = (state_attr('light.hall_lamp',\
            \ 'brightness') / 2.55) | int | round(0) %} {% set new_brightness = brightness_pct\
            \ - 25 %} {% if new_brightness > 1 %}\n  {{ new_brightness }}\n{% else\
            \ %}\n  1\n{% endif %}\n"
        entity_id: light.hall_lamp
        service: light.turn_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 3000 and is_state("light.hall_lamp",
          "off")}}'
      sequence:
      - data:
          transition: 1
          brightness_pct: 1
        entity_id: light.hall_lamp
        service: light.turn_on
  mode: single
- id: remote_control_2
  alias: 4_Remote button controller
  description: Actions performed by simple on off switch
  trigger:
  - event_data:
      event: 1002
      id: tradfri_on_off_switch
    event_type: deconz_event
    platform: event
  - event_data:
      event: 2002
      id: tradfri_on_off_switch
    event_type: deconz_event
    platform: event
  - event_data:
      event: 1003
      id: tradfri_on_off_switch
    event_type: deconz_event
    platform: event
  - event_data:
      event: 2003
      id: tradfri_on_off_switch
    event_type: deconz_event
    platform: event
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 1002 and is_state("light.box_lamp",
          "off")}}'
      sequence:
      - data:
          rgb_color:
          - '255'
          - '75'
          - '75'
          brightness_pct: 80
        entity_id: light.box_lamp
        service: light.turn_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 2002 and is_state("light.box_lamp",
          "on")}}'
      sequence:
      - data: {}
        entity_id: light.box_lamp
        service: light.turn_off
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.event == 1003}}'
      sequence:
      - data:
          transition: 1
          brightness_pct: 80
          kelvin: 2700
        entity_id: light.box_lamp
        service: light.turn_on
  mode: single
- id: '1601296769489'
  alias: 97_Info HA releases
  description: Notify about new HA releases
  trigger:
  - platform: state
    entity_id: sensor.latest_version_homeassistant
  condition:
  - condition: template
    value_template: '{{ states(''sensor.latest_version_homeassistant'') > states(''sensor.current_version_homeassistant'')
      }}'
  action:
  - data:
      data:
        priority: -1
        url: https://github.com/home-assistant/core/releases
      target: galaxys10
      title: New Home Assistant Release
      message: Home Assistant  {{ states('sensor.latest_version_homeassistant') }}  is
        now available.
    service: notify.pusher
  mode: single
- id: '1601480894174'
  alias: 98_System Refresh sensors
  description: Refreshes all time dependend sensors on a defined schedule
  trigger:
  - platform: time_pattern
    minutes: /10
  condition: []
  action:
  - service: homeassistant.update_entity
    data: {}
    entity_id: sensor.days_since_last_cleanup
  mode: single
- id: school_news
  alias: 97_Info School news
  description: Notify about new article on school webpage
  trigger:
  - platform: state
    entity_id: binary_sensor.school_news
    from: 'off'
    to: 'on'
  condition: []
  action:
  - data:
      data:
        priority: 0
        url: '{{ state_attr(''binary_sensor.school_news'', ''link'') }}'
      title: New article on school webpage
      message: '{{ state_attr(''binary_sensor.school_news'', ''header'') }}'
    service: notify.pusher
  mode: single
- id: '1602089750353'
  alias: 81_Emergency Air pollution
  description: Notify when AQI index goes over 100
  trigger:
  - platform: numeric_state
    entity_id: sensor.u_s_air_quality_index
    above: '100'
  - platform: numeric_state
    entity_id: sensor.u_s_air_quality_index
    above: '150'
  - platform: numeric_state
    entity_id: sensor.u_s_air_quality_index
    above: '200'
  - platform: numeric_state
    entity_id: sensor.u_s_air_quality_index
    above: '300'
  condition:
  - condition: template
    value_template: '{{ states(''sensor.u_s_air_quality_index'') | int > states(''var.air_quality_index_max'')
      | int }}'
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ states(''sensor.u_s_air_quality_index'') | int > 60 and
          states(''sensor.u_s_air_quality_index'') | int <= 100 }}'
      sequence:
      - data:
          data:
            priority: -1
          title: Měřítko kvality ovzduší
          message: 'Praha AQI: {{ states(''sensor.u_s_air_quality_index'') }}. {{-
            ''\n'' -}} Stav: mírné znečištění {{- ''\n'' -}} Primární zdroj: {{ states(''sensor.u_s_main_pollutant'')
            }}.'
        service: notify.pusher
    - conditions:
      - condition: template
        value_template: '{{ states(''sensor.u_s_air_quality_index'') | int > 100 and
          states(''sensor.u_s_air_quality_index'') | int <= 150 }}'
      sequence:
      - data:
          data:
            priority: 0
          title: Měřítko kvality ovzduší
          message: 'Praha AQI: {{ states(''sensor.u_s_air_quality_index'') }}. {{-
            ''\n'' -}} Stav: nezdravé pro určité skupiny {{- ''\n'' -}} Primární zdroj:
            {{ states(''sensor.u_s_main_pollutant'') }}.'
        service: notify.pusher
    - conditions:
      - condition: template
        value_template: '{{ states(''sensor.u_s_air_quality_index'') | int > 150 and
          states(''sensor.u_s_air_quality_index'') | int <= 200 }}'
      sequence:
      - data:
          data:
            priority: 0
          title: Měřítko kvality ovzduší
          message: 'Praha AQI: {{ states(''sensor.u_s_air_quality_index'') }}. {{-
            ''\n'' -}} Stav: nezdravé {{- ''\n'' -}} Primární zdroj: {{ states(''sensor.u_s_main_pollutant'')
            }}.'
        service: notify.pusher
    - conditions:
      - condition: template
        value_template: '{{ states(''sensor.u_s_air_quality_index'') | int > 200 and
          states(''sensor.u_s_air_quality_index'') | int <= 300 }}'
      sequence:
      - data:
          data:
            priority: 1
          title: Měřítko kvality ovzduší
          message: 'Praha AQI: {{ states(''sensor.u_s_air_quality_index'') }}. {{-
            ''\n'' -}} Stav: velmi nezdravé (havarijní) {{- ''\n'' -}} Primární zdroj:
            {{ states(''sensor.u_s_main_pollutant'') }}.'
        service: notify.pusher
    - conditions:
      - condition: template
        value_template: '{{ states(''sensor.u_s_air_quality_index'') | int > 300 }}'
      sequence:
      - data:
          data:
            expire: 3600
            priority: 2
            retry: 60
          title: Měřítko kvality ovzduší
          message: 'Praha AQI: {{ states(''sensor.u_s_air_quality_index'') }}. {{-
            ''\n'' -}} Stav: nebezpečné (hazardní) {{- ''\n'' -}} Primární zdroj:
            {{states(''sensor.u_s_main_pollutant'') }}.'
        service: notify.pusher
  - service: var.set
    data_template:
      entity_id: var.air_quality_index_max
      value: '{{ states(''sensor.u_s_air_quality_index'') }}'
  mode: single
- id: '1602357978047'
  alias: 97_Info Stock price
  description: Notify about significant loss in the share price
  trigger:
  - platform: numeric_state
    entity_id: sensor.siemens_ag
    below: '100'
    attribute: 05. price
  - platform: numeric_state
    entity_id: sensor.siemens_ag
    attribute: 09. change
    below: '-3.0'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: sensor.siemens_ag
          below: '100'
          attribute: 05. price
        - condition: numeric_state
          entity_id: sensor.siemens_ag
          attribute: 09. change
          below: '-3.0'
      sequence:
      - service: notify.pusher
        data:
          target: galaxys10
          message: 'Siemens AG: {{ state_attr(''sensor.siemens_ag'', ''05. price'')
            | round(2) }} EUR, pokles o {{ state_attr(''sensor.siemens_ag'', ''10.
            change percent'') | round(2) }}.'
          title: Siemens Share Info
          data:
            priority: 0
    default: []
  mode: single
- id: '1605992501908'
  alias: 5_Print job finished
  description: Notify about end of 3D print
  trigger:
  - platform: state
    entity_id: binary_sensor.octoprint_printing
    from: 'on'
    to: 'off'
    for: 00:01:00
  condition: []
  action:
  - data:
      data:
        priority: 1
        sound: magic
      target: galaxys10
      message: 3D print job is finished now!
      title: 3D Printer
    service: notify.pusher
  mode: single
- id: '1608567318963'
  alias: 1_Lights 6_SYNC Box lamp switch
  description: Synchronize relay switch with light state
  trigger:
  - platform: state
    entity_id: light.box_lamp
    from: 'off'
    to: 'on'
    for: 00:00:01
  - platform: state
    entity_id: light.box_lamp
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == ''on'' }}'
      - condition: state
        entity_id: switch.sonoff_ch2
        state: 'off'
      sequence:
      - service: switch.turn_on
        data: {}
        entity_id: switch.sonoff_ch2
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state == ''off'' }}'
      - condition: state
        entity_id: switch.sonoff_ch2
        state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        entity_id: switch.sonoff_ch2
  mode: single
- id: '1610565528088'
  alias: 1_Lights 1_Toogle TV LED Strip
  description: Toogle TV LED Strip based on TV state and light outside
  trigger:
  - platform: state
    entity_id: media_player.lg_webos_smart_tv
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: media_player.lg_webos_smart_tv
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: binary_sensor.is_dark
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.lg_webos_smart_tv
        state: 'on'
      - condition: state
        entity_id: binary_sensor.is_dark
        state: 'on'
      - condition: state
        entity_id: light.tv_led_strip_lamp
        state: 'off'
      sequence:
      - service: light.turn_on
        data:
          hs_color:
          - '{{ range(360)|random }}'
          - '{{ range(80,101)|random }}'
        entity_id: light.tv_led_strip_lamp
    - conditions:
      - condition: state
        entity_id: media_player.lg_webos_smart_tv
        state: 'off'
      - condition: state
        entity_id: light.tv_led_strip_lamp
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        entity_id: light.tv_led_strip_lamp
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_dark
        state: 'off'
      - condition: state
        entity_id: light.tv_led_strip_lamp
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        entity_id: light.tv_led_strip_lamp
    default: []
  mode: single
- id: '1610566131263'
  alias: 1_Lights 1_Change TV LED Strip colors
  description: Change colors continuously
  trigger:
  - platform: time_pattern
    hours: /1
  - platform: state
    entity_id: media_player.lg_webos_smart_tv
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: media_player.lg_webos_smart_tv
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_dark
    state: 'on'
  action:
  - service: light.turn_on
    data:
      brightness_pct: 50
      hs_color:
      - '{{ range(360)|random }}'
      - '{{ range(80,101)|random }}'
    entity_id: light.tv_led_strip_lamp
  mode: single
- id: '1610662616419'
  alias: '1_Lights 1_ON Daily TV LED Strip '
  description: Tun on LED Strip as daily light if TV is off
  trigger:
  - platform: state
    entity_id: binary_sensor.is_dark
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: media_player.lg_webos_smart_tv
    state: 'off'
  - condition: state
    entity_id: group.group_family
    state: home
  - condition: time
    after: '12:00:00'
  action:
  - service: light.turn_on
    data:
      brightness_pct: 30
      color_temp: 450
    entity_id: light.tv_led_strip_lamp
  mode: single
- id: '1610820878204'
  alias: 1_Lights 4_DIM Bathroom lamp
  description: Set brightness to 20 percent
  trigger:
  - platform: state
    entity_id: group.group_bathroom_motion_sensors
    from: 'on'
    to: 'off'
    for: 00:05:00
  condition: []
  action:
  - service: light.turn_on
    data:
      brightness: 51
    entity_id: light.bathroom_lamp
  mode: single
- id: '1611427108068'
  alias: 82_Emergency Battery level
  description: ''
  use_blueprint:
    path: low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      day: 6
      actions:
      - service: notify.pusher
        data:
          data:
            priority: 1
          message: Battery of {{sensors}} is low!
          title: Battery level alert!
          target: galaxys10
      threshold: 30
- id: '1616955811109'
  alias: 7_Mining stop when gaming
  description: Stop mining when gaming and resume afterwards
  trigger:
  - platform: state
    entity_id: sensor.steam_76561198254663953
    attribute: game
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.steam_76561198254663953
        state: None
        attribute: game
      - condition: state
        entity_id: switch.nh_battlebox_power
        state: 'off'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.nh_battlebox_power
    default:
    - condition: state
      entity_id: switch.nh_battlebox_power
      state: 'on'
    - service: switch.turn_off
      target:
        entity_id: switch.nh_battlebox_power
  mode: single
- id: '1619802100471'
  alias: 7_Mining Rig status change
  description: Report if there is unexpected minier status change when not home
  trigger:
  - platform: state
    entity_id: sensor.nh_battlebox_minerstatus
    from: MINING
    to: OFFLINE
  condition:
  - condition: state
    entity_id: person.tomas_juchelka
    state: not_home
  action:
  - data:
      data:
        priority: 1
        url: https://www.nicehash.com/my/dashboard
      target: galaxys10
      title: Mining status change
      message: Status of FractalBox is {{ states('sensor.nh_fractalbox_minerstatus')
        }} {{- '\n' -}}  Status of BattleBox is {{ states('sensor.nh_battlebox_minerstatus')
        }}.
    service: notify.pusher
  mode: single
- id: '1619803793551'
  alias: 97_Info Docker image update
  description: ''
  trigger:
  - platform: mqtt
    topic: diun/docker_version
  condition: []
  action:
  - service: var.set
    data_template:
      entity_id: "{% if 'homeassistant' in trigger.payload_json.image %}\n  var.version_ha_new\n\
        {% elif 'agent' in trigger.payload_json.image %}\n  var.version_agent_new\n\
        {% elif 'room-assistant' in trigger.payload_json.image %}\n  var.version_roomassistant_new\n\
        {% elif 'mariadb' in trigger.payload_json.image %}\n  var.version_mariadb_new\n\
        {% elif 'portainer-ce' in trigger.payload_json.image %}\n  var.version_portainer_new\n\
        {% elif 'pihole' in trigger.payload_json.image %}\n  var.version_pihole_new\n\
        {% elif 'mosquitto' in trigger.payload_json.image %}\n  var.version_mosquitto_new\n\
        {% elif 'influxdb' in trigger.payload_json.image %}\n  var.version_influxdb_new\n\
        {% elif 'chronograf' in trigger.payload_json.image %}\n  var.version_chronograf_new\n\
        {% elif 'diun' in trigger.payload_json.image %}\n  var.version_diun_new\n\
        {% else %}\n  var.version_temp\n{% endif %}"
      value: "{% set s = trigger.payload_json.image %}   {% set version = s.split(':')[1]\
        \ %}\n  {{ version }}"
  mode: parallel
  max: 10
- id: '1620478871087'
  alias: 82_Emergency Under-voltage
  description: Check for under-voltage.
  trigger:
  - platform: state
    entity_id: binary_sensor.rpi_power_status
    from: 'off'
    to: 'on'
  condition: []
  action:
  - data:
      data:
        priority: 1
      target: galaxys10
      message: Under-voltage was detected. Consider getting a uninterruptible power
        supply for your Raspberry Pi.
      title: RPi power status
    service: notify.pusher
  mode: single
- id: '1631039956107'
  alias: 98_System Status Report
  description: Regular status report
  trigger:
  - platform: time
    at: '20:00'
  condition:
  - condition: time
    after: '19:00'
    before: '21:00'
    weekday:
    - sun
  action:
  - service: notify.pusher
    data:
      target: galaxys10
      message: 'Date: {{ states(''sensor.date_time'') }} {{ ''\n'' -}}   Temp: {{
        states(''sensor.openweathermap_temperature'') }} °C {{ ''\n'' -}}   EUR/CZK:
        {{ states(''sensor.eur_czk'') }} {{ ''\n'' -}}   BTC/USD: {{ states(''sensor.btc_exchange_rate'')
        }} USD {{ ''\n'' -}}   Siemens AG: {{ state_attr(''sensor.siemens_ag'', ''05.
        price'') | round(2) }} EUR {{ ''\n'' -}}  Home Assistant: {{ states(''sensor.current_version_homeassistant'')
        }} | {{ states(''sensor.latest_version_homeassistant'') }} Vacuum: {{ states(''sensor.days_since_last_cleanup'')
        }} days ago {{ ''\n'' -}}'
      title: Weekly status report
      data:
        priority: 0
  mode: single
- id: '1637508890877'
  alias: 98_System Daily Reset
  description: Resets or initialize some values on a daily basis at midnight.
  trigger:
  - platform: time
    at: 00:00
  condition: []
  action:
  - service: var.set
    data:
      entity_id: var.air_quality_index_max
      value: 0
  mode: single
- id: '1638386823974'
  alias: 6_Security Recording FTP upload
  description: Switch on FTP upload to NAS after motion detection
  trigger:
  - platform: state
    entity_id: group.group_family
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: group.group_family
        state: not_home
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.reolink520a_ftp
          - switch.reolink520a_recording
          - switch.reolink520a_ir_lights
    - conditions:
      - condition: state
        entity_id: group.group_family
        state: home
      sequence:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.reolink520a_ftp
          - switch.reolink520a_recording
          - switch.reolink520a_ir_lights
    default: []
  mode: single
